#!/usr/bin/env python
# coding: utf-8

# In[1]:


import folium
map = folium.Map(location=[12.95283, 77.49689], zoom_start=2, tiles="Stamen Terrain")
fg=folium.FeatureGroup(name="My Map")
for coordinates in [[12.95283, 77.49689],[53.40496694810241, -6.252461688872998]]:
    map.add_child(folium.Marker(location=coordinates,popup="Hi Sup", icon=folium.Icon(color="red")))
map.add_child(fg)
map.save("Map1.html")
map


# In[2]:


#file processing by adding markers from files
import pandas as pd
data = pd.read_csv (r'volcano_data.csv')
data


# In[3]:


import pandas as pd
data = pd.read_table (r'volcano_data.csv')
data.columns


# In[9]:


import folium
import pandas as pd

data = pd.read_csv (r'volcano_data.csv')

lat=list(data["LON"])
lon=list(data["LAT"])

map = folium.Map(location=[12.95283, 77.49689], zoom_start=2, tiles="Stamen Terrain")
fg=folium.FeatureGroup(name="My Map")

for lt,ln in zip(lat,lon):#WHEN ITERATED THROUGH 2 LIST AT THE SAME TIME, SHOULD USE ZIP(). zip distributes item one by one
    map.add_child(folium.Marker(location=[lt,ln], popup="Hi Sup", icon=folium.Icon(color="red")))
map.add_child(fg)
map


# In[4]:


import folium
import pandas
data = pandas.read_csv("volcano_data.csv")
lat = list(data["Latitude"])
lon = list(data["Longitude"])
map = folium.Map(location = [46,-120],tiles="Stamen Terrain")
fg = folium.FeatureGroup(name = "My map") 
for lt, ln in zip(lat, lon):
    fg.add_child(folium.Marker(location = [lat,lon],popup =folium.Popup(str("Hi Sup!"),parse_html=True), icon = folium.Icon(color ='green')))
map.add_child(fg)
map.save("Map1.html")


# In[14]:


data = pandas.read_csv(r"volcano_data.csv")
 
map = folium.Map( location = [46,-120], zoom_start=2)
 
fg = folium.FeatureGroup(name = 'data')
 
for i,j,k in zip(data['LAT'],data['LON'],data['NAME']):
   
    coordinates = [i,j]
    txt = folium.Popup(k,parse_html=True)
    fg.add_child(folium.Marker(location = coordinates,
            popup = txt,
            icon = folium.Icon(color='red')))
 
map.add_child(fg)


# In[15]:


data = pandas.read_csv(r"volcano_data.csv")
lat = list(data["LAT"])
lon = list(data["LON"])
elev = list(data["ELEV"])
 
fg=folium.FeatureGroup(name="My Map")
for lt, ln, el in zip(lat, lon, elev): #WHEN ITERATED THROUGH 2 LIST AT THE SAME TIME, SHOULD USE ZIP(). zip distributes item one by one
    fg.add_child(folium.Marker(location=[lt, ln], popup=el, icon=folium.Icon(color='green')))
map
 


# In[48]:


import folium
import pandas
 
data = pandas.read_csv(r"D:\volcano_data.txt")
lat = list(data["LAT"])
lon = list(data["LON"])
name = list(data["NAME"])
elevation = list(data["ELEV"])
 
map_loc = folium.Map(location=[22.570904, 88.325756], tiles="Stamen Terrain")
 
fg = folium.FeatureGroup(name="My Map")
 
for lt, ln, n, el in zip(lat, lon, name, elevation):
    fg.add_child(folium.Marker(location=[lt, ln], popup=f'{n},{el}m', icon=folium.Icon(color='red')))
 
map_loc.add_child(fg)
 
map_loc.save("Map1.html")
map


# In[54]:


#string manipulation by adding text on popup window
import folium
import pandas
 
data = pandas.read_csv(r"D:\volcano_data.txt")
lat = list(data["LAT"])
lon = list(data["LON"])
elev = list(data["ELEV"])
 
map = folium.Map(location=[26.00, -80.15], zoom_start=10, tiles="Stamen Terrain")
 
fg = folium.FeatureGroup(name="My Map")
 
for lat, ln, el  in zip(lat, lon, elev):
    fg.add_child(folium.Marker(location=[lat, ln], popup=el, icon=folium.Icon(color='green')))
 
map.add_child(fg)
 
map.save("Map1.html")
map


# In[56]:


import folium
import pandas
 
data = pandas.read_csv(r"D:\volcano_data.txt")
lat = list(data["LAT"])
lon = list(data["LON"])
elev = list(data["ELEV"])

def color_producer():
    return "green"
    

 
map = folium.Map(location=[26.00, -80.15], zoom_start=10, tiles="Stamen Terrain")
 
fg = folium.FeatureGroup(name="My Map")
 
for lat, ln, el  in zip(lat, lon, elev):
    fg.add_child(folium.Marker(location=[lat, ln], popup=el, icon=folium.Icon(color=color_producer)))
 
map.add_child(fg)
map


# In[66]:


#functions by creatng a color generation function for markers

import folium
import pandas
data=pandas.read_csv(r"D:\volcano_data.txt")
lat=list(data["LAT"])
lon=list(data["LON"])
elev=list(data["ELEV"])
map=folium.Map(location=[38.08,-99.09],zoom_start=6, tiles="Stamen Terrain")
fg=folium.FeatureGroup(name="My Map")
 
def color_producer(elev):
    if elev <1000:
        return 'green'
    elif 1000<= elev <3000:
        return 'orange'
    else:
        return 'red'
for lt,ln,el in zip(lat,lon,elev):
    fg.add_child(folium.CircleMarker(location=(lt,ln), popup=str(el) +"m" ,radius=6, fill_color=color_producer(el), color='grey'))

map.add_child(fg)
map.save("Map1.html")
map
 


# In[77]:


import folium
import pandas
data=pandas.read_csv(r"D:\volcano_data.txt")
lat=list(data["LAT"])
lon=list(data["LON"])
elev=list(data["ELEV"])
map=folium.Map(location=[38.08,-99.09],zoom_start=6, tiles="Stamen Terrain")
fg=folium.FeatureGroup(name="My Map")
 
def color_producer(elev):
    if elev <1000:
        return 'green'
    elif 1000<= elev <3000:
        return 'orange'
    else:
        return 'red'
for lt,ln,el in zip(lat,lon,elev):
    fg.add_child(folium.CircleMarker(location=(lt,ln), popup=str(el) +"m" ,radius=6, fill_color=color_producer(el), color='grey'))


map.add_child(fg)
map.save("Map1.html")
map


# In[72]:


import folium
import pandas
 
data = pandas.read_csv(r"D:\volcano_data.txt")
lat = list(data["LAT"])
lon = list(data["LON"])
elev = list(data["ELEV"])
name = list(data["NAME"])
 
def color_producer(elevation):
    if elevation < 1000:
        return 'green'
    elif 1000 <= elevation < 3000:
        return 'orange'
    else:
        return 'red'
 
map = folium.Map(location=[48.7767982, -121.810997, 3285.0], zoom_start=6, tiles="Stamen Terrain")
 
fg = folium.FeatureGroup(name = "My Map")
 
for lt, ln, el, name in zip(lat, lon, elev , name):
    fg.add_child(folium.CircleMarker(location=[lt, ln], radius = 6, popup=str(el)+" m", fill_color=color_producer(el), fill_opacity=0.7,color="grey"))

    
map.add_child(fg)
 
map.save("Map1.html")
map


# In[76]:


import folium
import pandas

data=pandas.read_csv(r"D:\volcano_data.txt")
lat=list(data['LAT'])
lon=list(data['LON'])
name=list(data['NAME'])
elev=list(data['ELEV'])

def color_producer(elevation):
    if elevation < 1000:
        return 'green'
    elif 1000<= elevation <3000:
        return 'orange'
    else:
        return 'red'

#map= folium.Map(location=geocoder.ip('me').latlng,zoom_start=6,tiles='Mapbox Bright')
map= folium.Map(location=[38.58,-99.09],zoom_start=6,tiles='Stamen Terrain')

fg=folium.FeatureGroup(name='My Map')

for lt,ln,na,el in zip(lat,lon,name,elev) :
    fg.add_child(folium.CircleMarker(location=[lt,ln],radius=6,popup=folium.Popup(na+'\n'+str(el)+'m',
    parse_html=True),fill_color=color_producer(el),color='grey',fill_opacity=0.7,fill=True))

fg.add_child(folium.GeoJson(data=open('D:\world.json','r',encoding='utf-8-sig').read(),
style_function=lambda x:{'fillColor':'green' if x['properties']['POP2005']<10000000
else 'orange ' if 10000000<=x['properties']['POP2005']<20000000 else 'red'}))

map.add_child(fg)

map.save('Map1.html')
map


# In[78]:


import folium
 
import pandas
 
data = pandas.read_csv(r"D:\volcano_data.txt")
lat=list(data["LAT"])
lon=list(data["LON"])
elev= list (data["ELEV"])
 
def color(elevation):
    if elevation < 1000:
        return "green"
    elif 1000<=elevation<3000:
        return "orange"
    else:
        return "red"
 
map = folium.Map ( location=[38.58, -99.09], zoom_start=5, tiles="Stamen Terrain")
 
 
fg = folium.FeatureGroup(name="My Map")
 
for lat,lon,elev in zip(lat,lon,elev):
    fg.add_child(folium.CircleMarker(location=[lat,lon], radius=6 ,  popup="Elevation " + str(elev)+ " meters" ,
                                     fill=True, color="gray", fill_color=color(elev), fill_opacity=0.7))
 
fg.add_child(folium.GeoJson(data=open("D:\world.json", "r", encoding = "utf-8-sig").read(),
                            style_function=lambda x: {'fillColor':'green' if x["properties"]["POP2005"]<10000000
                                                      else "orange" if 10000000 <= x ["properties"]["POP2005"]<20000000 else "red"}))
 
map.add_child(fg)
 
 
map.save("mapt1.html")
map


# In[84]:


#stylizing population layer
import folium

import pandas

data=pandas.read_csv(r"D:\volcano_data.txt")

lat=list(data["LAT"])

lon=list(data["LON"])

el=list(data["ELEV"])

def color_produce():

    if el<1000:

        return "green"

    elif (el>1000 and el<3000):

        return "red"

    else:

        return "orange"

map=folium.Map(location=[38.58,-99.89], zoom_start=5, tiles="Stamen Terrain")

fgv=folium.FeatureGroup(name="volcanoes")

for lt, ln, el in zip(lat, lon, el):

    fgv.add_child(folium.CircleMarker(location=[lt, ln],radius=6, popup=str(el)+ " m", fillColor=color_produce(),color='grey',fill_opacity=0.7))

fgp=folium.FeatureGroup(name="Population")

fgp.add_child(folium.GeoJson(data=open('D:\world.json','r',encoding='utf-8-sig').read(),

style_function=lambda x: { 'fillcolor' : 'green' if x['properties']['POP2005']<10000000

else 'orange' if 10000000<=x['properties']['POP2005']<20000000 else 'red'}))

map.add_child(fgv)

map.add_child(fgp)

map.add_child(folium.LayerControl())

map.save("Map3.html")
map


# In[86]:


#Adding a layer control anel
import folium
import pandas
 
map = folium.Map(location=[35.58, -99.09],zoom_start=6, tiles="Stamen Terrain")
 
data = pandas.read_csv(r"D:\volcano_data.txt")
lat = list(data["LAT"])
lon = list(data["LON"])
elev = list(data["ELEV"])
name = list(data["NAME"])
 
def color_producer(elevation):
    if elevation < 1000:
        return "green"
    elif 1000<= elevation < 3000:
        return "orange"
    else:
        return "red"
 
fg_v = folium.FeatureGroup(name="Volcanoes USA")
#fg.add_child(folium.Marker(location=[38.2,-99.1],popup="Hello there", icon=folium.Icon(color="green")))
#fg.add_child(folium.Marker(location=[37.2,-99.1],popup="Hello there", icon=folium.Icon(color="green")))
#fg.add_child(folium.Marker(location=[36.2,-99.1],popup="Hello there", icon=folium.Icon(color="green")))
 
for lt,ln,el,na in zip(lat,lon,elev,name):
    temp = "%s <br> %s MASL" % (str(na),str(el))
    iframe = folium.IFrame(temp, width=200,height=100)
    #popup = folium.Popup(temp, parse_html=True)
    fg_v.add_child(folium.CircleMarker(location=(lt,ln), popup=folium.Popup(iframe), radius = 6, color=color_producer(el),fill_color=color_producer(el),fill=True, fill_opacity=0.7))
 
fg_p = folium.FeatureGroup(name="Population")
 
fg_p.add_child(folium.GeoJson(data=open('D:\world.json','r', encoding='utf-8-sig').read(),
style_function = lambda x: {'fillColor':'green'
if x['properties']['POP2005']<10000000
else 'orange' if 10000000<=x['properties']['POP2005']<20000000
else 'red' }))
 
map.add_child(fg_p)
map.add_child(fg_v)
map.add_child(folium.LayerControl()) #must be added after featuregroup has been incorporated in the map
 
map.save("Map1.html")
map


# In[ ]:




